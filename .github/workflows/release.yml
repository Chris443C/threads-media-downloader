name: ðŸš€ Auto Release

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual releases

jobs:
  tag_version:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Bump Version & Push Tag
      id: versioning
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        latest_version=$(git tag | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
        echo "Latest Version: $latest_version"

        if [[ -z "$latest_version" ]]; then
          new_version="v1.0.0"
        else
          IFS='.' read -r major minor patch <<< "${latest_version#v}"
          new_version="v$major.$((minor + 1)).0"
        fi

        echo "New Version: $new_version"
        git tag "$new_version"
        git push origin "$new_version"
        echo "VERSION=$new_version" >> $GITHUB_ENV

    - name: Generate Release Notes
      id: release_notes
      run: |
        git log --oneline $(git describe --tags --abbrev=0)..HEAD > release_notes.md
        echo "Release Notes Generated"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VERSION }}
        name: "Release ${{ env.VERSION }}"
        body_path: release_notes.md
        draft: false
        prerelease: false

    - name: Build & Attach Docker Image
      run: |
        docker build -t your-dockerhub-username/threads-downloader .
        docker save your-dockerhub-username/threads-downloader | gzip > threads-downloader.tar.gz

    - name: Build AWS Lambda Package
      run: |
        zip -r threads_lambda.zip serverless/aws_lambda/

    - name: Build GCP Cloud Function Package
      run: |
        zip -r threads_gcp.zip serverless/gcp_functions/

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VERSION }}
        files: |
          threads-downloader.tar.gz
          threads_lambda.zip
          threads_gcp.zip
